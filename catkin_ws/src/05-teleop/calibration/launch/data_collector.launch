<launch>
  <arg name="veh" doc="Name of vehicle. ex: megaman"/>
  <arg name="package_namespace" default="calibration" />
  <arg name="node_namespace" default="data_collector" />
  <arg name="use_for" default="calibration" doc="determines the open loop commands to present, takes values calibration or verification" />
  <arg name="development" default="false" doc="specify whether you are in development stage, if so wheel commands are not need to be sent to the vehicle"/>
  <arg name="output_rosbag_dir" default="$(env HOME)" doc="folder to save the rosbag" />

  <!-- Launch the rosbag_recorder node to start/stop bag file inside a node in this package -->
  <include file="$(find rosbag_recorder)/launch/rosbag_recorder_server.launch">
    <arg name="veh" value="$(arg veh)"/>
    <arg name="output_rosbag_dir" value="$(arg output_rosbag_dir)"/>
  </include>

  <!-- include the machines file  -->
  <include file="$(find duckietown)/machines"/>

  <!-- launch the wheel drive node -->
  <include file="$(find dagu_car)/launch/wheels_driver_node.launch">
    <arg name="veh" value="$(arg veh)"/>
    <arg name="development" value="$(arg development)"/>
  </include>

  <!-- Launch the script that publishes open-loop input commands to wheels -->
  <group ns="$(arg veh)/$(arg package_namespace)">
    <node  pkg="calibration" type="$(arg node_namespace).py" name="$(arg node_namespace)" output="screen" clear_params="true" required="true">
      <param name="use_for" value="$(arg use_for)"/>
      <param name="veh" value="$(arg veh)"/>
      <param name="output_rosbag_dir" value="$(arg output_rosbag_dir)"/>
    </node>
  </group>
</launch>
